@using PartyGuide.Domain.Models;
@model ServiceModel
@{
	ViewData["Title"] = "Service Catalog";
}

<div class="container mt-5">
	<div class="row">

		<!-- Main Panel (left side) -->
		<div class="col-md-8">
			<div class="card mb-4">
				<div class="card-header bg-primary text-white">
					<h3 class="card-title">@Model.Title</h3>
				</div>
				<div class="card-body">
					@if (Model.Image != null && Model.Image.Length > 0)
					{
						<img src="@($"data:image/png;base64,{Convert.ToBase64String(Model.Image)}")" class="card-img-top img-fluid mb-4" alt="@Model.Title" style="object-fit: cover;">
					}
					<p class="card-text"><strong>Description:</strong><br />@Model.Description</p>
					<p class="card-text"><strong>Phone:</strong> @Model.PhoneNumber</p>
					<p class="card-text"><strong>Price Range:</strong> $@Model.StartPriceRange - $@Model.EndPriceRange</p>
					<p class="card-text"><strong>Location:</strong> @Model.Location</p>
				</div>
			</div>
		</div>

		<!-- Additional Information and Contact the Seller Panels (right side) -->
		<div class="col-md-4">
			<div class="card mb-4">
				<div class="card-header bg-secondary text-white">
					<h4 class="card-title">Additional Information</h4>
				</div>
				<div class="card-body">
					<!-- Add additional information here -->
					<p class="card-text">@Model.ExtendedDescription</p>
				</div>
			</div>

			<div class="card mb-4">
				<div class="card-header bg-info text-white">
					<h4 class="card-title">Contact the Seller</h4>
				</div>
				<div class="card-body">
					<p class="card-text">If you're interested in this service, feel free to contact the seller for more details or to make arrangements.</p>
					<button class="btn btn-primary">Contact Seller</button>
				</div>
			</div>

			<!-- Google Meets Panel (right side) -->

			<div class="card mb-4">
				<div class="card-header bg-success text-white">
					<h4 class="card-title">Arrange a Meeting</h4>
				</div>
				<div class="card-body">
					<div id="google-meet" style="height: 300px;"></div>
				</div>
			</div>

			<!-- Ratings Panel (right side) -->

			<form id="ratingForm" data-service-id="@Model.Id">
				<input type="hidden" name="serviceId" value="@Model.Id" />
				<label for="rating">Rate this service:</label>
				<select name="rating" id="rating">
					<option value="1">1 star</option>
					<option value="2">2 stars</option>
					<option value="3">3 stars</option>
					<option value="4">4 stars</option>
					<option value="5">5 stars</option>
				</select>
				<button type="button" id="submitRating">Submit</button>
			</form>

			<div id="ratingContainer">
				<div class="rating">
					@for (int i = 1; i <= 5; i++)
					{
						<span class="fa-@(i <= Model.Rating ? "solid" : "regular") fa-star"></span>
					}
					<span>(@Model.NumberOfRatings reviews)</span>
				</div>
			</div>



		</div>
	</div>
</div>
@*
<!-- JavaScript for Google Calendar integration -->
<script src="https://apis.google.com/js/api.js"></script>
<script>
	gapi.load('client', initGoogleCalendar);

	function initGoogleCalendar() {
		gapi.client.init({
			apiKey: 'AIzaSyBftVk0QXMzgqkVf5NNU8QBY0-mTQXo-JM', // Replace with your API key
			discoveryDocs: ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"],
		}).then(function () {
			// Fetch available days from the Google Calendar API
			fetchAvailableDays();
		});
	}

	function fetchAvailableDays() {
		// Implement logic to fetch available days from Google Calendar API
		// Example: Make a request to the Google Calendar API using gapi.client.calendar.events.list
		// and extract the available days.

		// Dummy data for demonstration purposes
		var availableDays = ["2023-12-20", "2023-12-22", "2023-12-25"];

		// Render the Google Calendar using the available days
		renderGoogleCalendar(availableDays);
	}

	function renderGoogleCalendar(availableDays) {
		// Implement logic to render the Google Calendar using a JavaScript calendar library.
		// Example: Use FullCalendar (https://fullcalendar.io/) to render the calendar.

		// Dummy initialization for demonstration purposes
		$('#googleCalendar').fullCalendar({
			events: availableDays.map(function (day) {
				return {
					title: 'Available',
					start: day,
					allDay: true,
				};
			}),
			header: {
				left: 'prev,next today',
				center: 'title',
				right: 'month,agendaWeek,agendaDay',
			},
		});
	}
</script>*@
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
	$(document).ready(function () {
		$("#submitRating").on("click", function () {
			var serviceId = $("#ratingForm").data("service-id");
			var ratingValue = $("#rating").val();

			$.ajax({
				url: "@Url.Action("RateService", "Service")",
				method: "POST",
				data: { serviceId: serviceId, rating: ratingValue },
				success: function (data) {
					if (data.success) {
						// Update the rating container with the new rating
						$("#ratingContainer").html("Rating submitted successfully!");
					} else {
						// Display error message
						alert("Error: " + data.errorMessage);
					}
				},
				error: function () {
					// Handle errors
					alert("An error occurred while submitting the rating.");
				}
			});
		});
	});
</script>
